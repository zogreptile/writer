/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

* {
  box-sizing: border-box;
  outline: none; }

html {
  height: 100%;
  font-size: 16px;
  color: #111111; }

body {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  font-family: "Open Sans", sans-serif; }

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  font-size: inherit;
  font-weight: inherit; }

a {
  color: inherit; }

a:hover {
  text-decoration: none; }

p {
  margin-top: 0;
  margin-bottom: 10px; }

p:last-of-type {
  margin-bottom: 0; }

input,
textarea {
  padding: 0;
  width: 100%;
  font-family: inherit;
  color: inherit; }

select {
  font-family: inherit;
  color: inherit;
  cursor: pointer; }

fieldset {
  margin: 0;
  border: none; }

table {
  width: 100%; }

button {
  font-family: inherit;
  cursor: pointer; }

.container {
  padding: 0 15px;
  margin: 0 auto; }

@media (min-width: 1200px) {
  .container {
    width: 1000px; } }

.page-wrap {
  flex: 1 0 auto; }

.editor-content {
  line-height: 1.45 !important;
  font-size: 1rem !important;
  text-align: justify; }

.editor-content:after {
  content: '';
  display: table;
  clear: both; }

.editor-content * {
  font-size: 1em !important;
  font-family: "Open Sans", sans-serif !important; }

.editor-content h1,
.editor-content h2,
.editor-content h3,
.editor-content h4,
.editor-content h5,
.editor-content h6 {
  font-family: "PT Serif", serif !important;
  margin-top: 0 !important;
  margin-bottom: 15px !important;
  font-weight: bold !important;
  line-height: 1 !important; }

.editor-content h1 {
  font-size: 1.5em !important; }

.editor-content h2 {
  font-size: 1.4em !important; }

.editor-content h3 {
  font-size: 1.3em !important; }

.editor-content h4 {
  font-size: 1.2em !important; }

.editor-content h5 {
  font-size: 1.1em !important; }

.editor-content h6 {
  font-size: 1em !important; }

.editor-content img {
  display: block !important;
  max-width: 100% !important;
  margin-left: auto !important;
  margin-right: auto !important;
  box-shadow: 0 0 3px 0 #dadada !important; }

.header {
  flex: 0 0 auto;
  margin-top: 20px; }

.agreement {
  margin: 15px 0 32px;
  padding-left: 30px;
  font-size: 12px;
  position: relative; }

.agreement > * {
  cursor: pointer; }

.agreement__checkbox {
  width: 5px;
  opacity: 0;
  position: absolute !important;
  top: 0;
  left: 0;
  z-index: -1; }

.agreement__checkbox:checked + .agreement__checkbox-view {
  background-color: #000; }

.agreement__checkbox:focus + .agreement__checkbox-view {
  border-color: #000; }

.agreement__checkbox-view {
  display: block;
  width: 17px;
  height: 17px;
  border: 1px solid #fff;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  transition: all .3s ease; }

.btn {
  display: inline-block;
  padding: 15px 35px;
  border: none;
  background-color: #fff;
  color: inherit;
  text-decoration: none; }

.btn:not(:disabled):hover {
  box-shadow: inset 0 0 0 1px #000;
  background-color: #000;
  color: #fff; }

.btn:disabled {
  cursor: not-allowed; }

.intro {
  display: flex;
  margin-bottom: 20px; }

.intro__photo {
  width: 220px;
  margin-right: 25px;
  flex-shrink: 0; }

.intro__photo img {
  display: block;
  width: 100%; }

.intro__text {
  padding: 15px 0;
  border-top: 5px solid #ff9800;
  border-bottom: 5px solid #ff9800;
  font-family: "PT Serif", serif;
  font-size: 32px; }

.item {
  display: flex;
  padding: 15px;
  background-color: #ffede9; }

.item:not(:last-child) {
  margin-bottom: 40px; }

.item__img {
  margin-right: 20px;
  width: 100px;
  flex-shrink: 0; }

.item__img img {
  display: block;
  max-width: 100%; }

.item__info {
  flex-grow: 1; }

.item__title {
  margin-bottom: 14px;
  font-family: "PT Serif", serif;
  font-size: 26px; }

.item__get {
  margin-top: 16px;
  text-align: right; }

.item__get a {
  display: inline-block;
  margin-left: 15px; }

.list {
  margin: 0;
  padding: 0; }

.list li {
  list-style: none; }

.list--ordered {
  padding-left: 20px; }

.list--ordered li {
  list-style: decimal; }

.list__item {
  line-height: 1.2; }

.list__item:not(:last-child) {
  margin-bottom: 8px; }

.menu__list {
  margin: 0;
  padding: 0;
  margin-bottom: 15px;
  text-align: right; }

.menu__list li {
  list-style: none; }

.menu__item {
  display: inline-block; }

.menu__item:not(:last-child) {
  margin-right: 25px; }

.menu__link {
  display: inline-block;
  padding: 10px 0; }

.notification {
  padding: 10px;
  margin-left: 15px;
  max-width: 500px;
  background-color: #fff;
  border: 2px solid #000;
  position: fixed;
  top: 15px;
  right: -100%;
  z-index: 1005;
  transition: right 500ms ease;
  cursor: pointer; }

.notification--show {
  right: 15px; }

.title {
  margin-bottom: 30px;
  font-family: "PT Serif", serif;
  font-size: 36px; }

.footer {
  padding: 30px 0;
  flex: 0 0 auto;
  font-size: 12px;
  text-align: center; }

.loading-btn {
  color: transparent !important;
  position: relative; }

.loading-btn:after {
  content: '';
  display: block;
  width: 20px;
  height: 20px;
  border: 3px solid #fff;
  border-left-color: transparent;
  border-top-color: transparent;
  border-radius: 50%;
  outline: 0 solid transparent;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -13px;
  margin-left: -13px;
  animation-name: spinner;
  animation-duration: 1s;
  animation-iteration-count: infinite;
  animation-timing-function: cubic-bezier(0.74, 0.46, 0.21, 0.53); }

@keyframes spinner {
  100% {
    transform: rotate(360deg); } }

.mb-15 {
  margin-bottom: 15px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
